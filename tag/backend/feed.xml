<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator>
  <link href="http://localhost:4000/tag/backend/feed.xml" rel="self" type="application/atom+xml" />
  <link href="http://localhost:4000/" rel="alternate" type="text/html" />
  <updated>2022-02-05T11:34:09+09:00</updated>
  <id>http://localhost:4000/tag/backend/feed.xml</id>

  
  
  

  
    <title type="html">Collection of studies | </title>
  

  
    <subtitle>공부 정리용 블로그</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">Call Stack, Non-blocking IO, Event Loop</title>
      <link href="http://localhost:4000/backend-js-basic1" rel="alternate" type="text/html" title="Call Stack, Non-blocking IO, Event Loop" />
      <published>2022-02-04T21:00:00+09:00</published>
      <updated>2022-02-04T21:00:00+09:00</updated>
      <id>http://localhost:4000/backend-js-basic1</id>
      <content type="html" xml:base="http://localhost:4000/backend-js-basic1">&lt;p&gt;안녕하세요. 성장하는 것을 즐기는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;changuk&lt;/code&gt;이라고 합니다. 현재 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fastcampus&lt;/code&gt;에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;backend&lt;/code&gt; 개발을 공부하고 있습니다. 강의를 들으면서 해온 것들을 작성하여 지식을 공유하고 또 제가 잊었을 때 다시 와서 볼 수 있도록 내용들을 정리하려고 합니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;NodeJS를 잘 이해하기 위해서는, JavaScript의 동시성 모델(실행 모델)에 대해 잘 이해해야 합니다.
실행모델은 &lt;strong&gt;Event Loop&lt;/strong&gt;, &lt;strong&gt;Call Stack&lt;/strong&gt;, &lt;strong&gt;Callback queue&lt;/strong&gt;개념으로 이루어집니다. 이번시간은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Event Loop&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Call Stack&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Non-blocking IO&lt;/code&gt; 를 학습하도록 하겠습니다.&lt;/p&gt;

&lt;h2 id=&quot;contents&quot;&gt;Contents&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#event-loop&quot;&gt;Event Loop&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;event-loop&quot;&gt;Event Loop&lt;/h2&gt;

&lt;p&gt;먼저 Event Loop부터 알아보도록 하겠습니다. &lt;strong&gt;Event Loop&lt;/strong&gt; 모델은 여러 스레드를 사용합니다. 그 중 우리가 작성한 JS 코드가 실행되는 스레드를 &lt;strong&gt;메인 스레드&lt;/strong&gt;라 부릅니다. &lt;br /&gt;
&lt;strong&gt;한 NodeJS 프로세스에서 메인 스레드는 하나이며, 한 순간에 한 줄씩만 실행됩니다.&lt;/strong&gt; 즉, 우리가 작성한 JS 코드가 동시에 여러줄 실행되는 경우는 적어도 한 프로세스 내에서는 없다고 볼 수 있습니다. &lt;br /&gt;
그러나, 그 외의 일(&lt;strong&gt;file I/O, network…&lt;/strong&gt;)을 하는 &lt;strong&gt;워커 스레드&lt;/strong&gt;는 여럿이 있을 수 있습니다.&lt;br /&gt; 이 NodeJS 프로세스 하나에서 메인 스레드가 하나이고, 한 순간에 한 줄씩만 실행된다는 제약은 굉장히 강력하고 효과적입니다. 이유는, 어떤 변수가 동시에 여러 실행 Context에 의해 뒤바뀔일이 없기 때문입니다. 따라서 &lt;strong&gt;프로그램의 상태를 예측하기가 훨씬 용이&lt;/strong&gt;하다는 뜻입니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;call-stack&quot;&gt;Call Stack&lt;/h2&gt;

&lt;p&gt;그럼 &lt;strong&gt;Call Stack&lt;/strong&gt;은 무엇일까요? &lt;strong&gt;지금 시점까지 불린 함수들의 스택&lt;/strong&gt;이라고 할 수 있습니다. 함수가 호출될 때 쌓이고, 리턴할 때 빠집니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/built/images/nodejs/callstack.png&quot; width=&quot;300&quot; height=&quot;450&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;f3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;f2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;f3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;f1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;f2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;f1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;스택 자료구조는, 아래서부터 쌓이는 FILO(First In Last Out)형태의 자료구조이기 때문에,&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Woo Chang Uk</name>
        
        
      </author>

      

      
        <category term="backend" />
      

      
        <summary type="html">안녕하세요. 성장하는 것을 즐기는 changuk이라고 합니다. 현재 fastcampus에서 backend 개발을 공부하고 있습니다. 강의를 들으면서 해온 것들을 작성하여 지식을 공유하고 또 제가 잊었을 때 다시 와서 볼 수 있도록 내용들을 정리하려고 합니다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Backend - NodeJS SETUP</title>
      <link href="http://localhost:4000/backend-setup" rel="alternate" type="text/html" title="Backend - NodeJS SETUP" />
      <published>2022-02-04T09:00:00+09:00</published>
      <updated>2022-02-04T09:00:00+09:00</updated>
      <id>http://localhost:4000/backend-setup</id>
      <content type="html" xml:base="http://localhost:4000/backend-setup">&lt;p&gt;안녕하세요. 성장하는 것을 즐기는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;changuk&lt;/code&gt;이라고 합니다. 현재 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fastcampus&lt;/code&gt;에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;backend&lt;/code&gt; 개발을 공부하고 있습니다. 강의를 들으면서 해온 것들을 작성하여 지식을 공유하고 또 제가 잊었을 때 다시 와서 볼 수 있도록 내용들을 정리하려고 합니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;이번시간은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NodeJS SETUP&lt;/code&gt;을 진행하겠습니다.&lt;/p&gt;

&lt;h2 id=&quot;contents&quot;&gt;Contents&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#setup&quot;&gt;&lt;strong&gt;Setup&lt;/strong&gt;&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#vscode-javascript-development-setup&quot;&gt;&lt;strong&gt;VSCode JS Dev Setup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;

&lt;p&gt;높은 생산성을 위해서는 개발환경을 잘 세팅해두는 것이 필수적이라고 할 수 있습니다. 개발을 편하게 하는 패키지들 중 하나인 &lt;strong&gt;Formatter&lt;/strong&gt;와 &lt;strong&gt;Linter&lt;/strong&gt;를 먼저 설치해주도록 하겠습니다. &lt;br /&gt;
Formatter는 띄어쓰기나 들여쓰기가 잘 되어 있는지, 비주얼적인 요소를 바로바로 맞춰주는 패키지라고 할 수 있고, Linter는 자체적으로 권장하는 문법에 맞지 않으면 에러를 발생시켜서 수정하도록 하는 패키지라고 할 수 있습니다.npm으로 개발 의존성 패키지가 되도록 설치하도록 하겠습니다.
이 두 패키지는 설치해주고 VSCode Extensions를 따로 설치해 주셔야 합니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;npm i -D prettier eslint&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;그리고 Airbnb에서 제공하는 &lt;a href=&quot;https://github.com/airbnb/javascript&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;JavaScript Style Guide&lt;/strong&gt;&lt;/a&gt;를 설치하도록 하겠습니다. JavaScript 개발에 가장 합리적인 접근이라고 하네요. 또 이 플러그인을 연결해줄 수 있도록 새로운 패키지도 설치하겠습니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;npm i -D eslint-airbnb-base eslint-plugin-import&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;prettier와 eslint가 서로 충돌할 수 있기 때문에, 다음 플러그인도 설치해 주어야 합니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;npm i -D eslint-config-prettier&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;eslint가 NodeJS환경에서도 잘 동작할 수 있는 플러그인도 설치하겠습니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;npm i -D eslint-plugin-node&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;당장 TypeScript를 사용하는 것은 아니지만, TypeScript의 Type Checking을 이용하기 위해, 이 패키지도 설치하도록 하죠.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;npm i -D typescript&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;그리고 Type Checking을 할 수 있도록 다음 라인을 js파일의 처음에 입력해주면 됩니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//@ts-check&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;또, node환경에서의 주로 사용하는 객체들에 대한 Type 정보들에 Type Checking을 수행해주기 위해서 아래 패키지도 또 설치하도록 하겠습니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;npm i -D @types/node&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;prettier, eslint 각각의 설정 파일을 다음과 같이 만들도록 하겠습니다. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;.prettierrc&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;.eslintrc.js&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;prettier의 설정은, 본인의 기호에 맞게 세팅해주면 됩니다. 기본적인 설정만 이용해도 만족감은 상당하죠. &lt;br /&gt;
&lt;strong&gt;.eslintrc.js&lt;/strong&gt;파일에는 설정을 좀 추가하도록 하겠습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 이 순서대로 작성해 주어야 한다.&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;airbnb-base&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;plugin:node/recommended&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;prettier&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;마지막으로 &lt;strong&gt;jsconfig.json&lt;/strong&gt;파일을 생성하고 다음 내용을 기입하여 설정을 마무리 해주도록 하겠습니다. 엄격한 컴파일 옵션을 설정해주고, src 밑의 모든 파일들을 확인해주겠다는 의미로 이해하시면 될 것 같습니다.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;compilerOptions&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;strict&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;include&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;src밑의&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;모든&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;파일들&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;src/**/*&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Setup내용을 간략하게 표로 정리했습니다.&lt;/p&gt;

&lt;h4 id=&quot;vscode-javascript-development-setup&quot;&gt;VSCode JavaScript Development Setup&lt;/h4&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Formatting&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Linting&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Type Checking&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;Package&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;prettier&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;eslint&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;typescript&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;&lt;br /&gt;Additional &lt;br /&gt;dependencies&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;eslint-config-airbnb-base&lt;br /&gt; eslint-config-prettier&lt;br /&gt; eslint-plugin-import&lt;br /&gt;eslint-plugin-node&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;@types/node&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;Config file&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;.prettierrc&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;.eslintrc.js&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;jsconfig.json&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;VSCode&lt;br /&gt;extensions&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;O&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;O&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;X&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content>

      
      
      
      
      

      <author>
          <name>Woo Chang Uk</name>
        
        
      </author>

      

      
        <category term="backend" />
      

      
        <summary type="html">안녕하세요. 성장하는 것을 즐기는 changuk이라고 합니다. 현재 fastcampus에서 backend 개발을 공부하고 있습니다. 강의를 들으면서 해온 것들을 작성하여 지식을 공유하고 또 제가 잊었을 때 다시 와서 볼 수 있도록 내용들을 정리하려고 합니다.</summary>
      

      
      
    </entry>
  
</feed>
